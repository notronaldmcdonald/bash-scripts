#!/usr/bin/env bash
# Foundation Packager
# Developed by Brett. (https://github.com/notronaldmcdonald)
ver=1.0.0
source ~/bash-scripts/foundation/foundation-base
source ~/bash-scripts/foundation/upstream-targets

# fpkgr functions
# comment out any lines you wish to disable.
# change 'main' to any repository in your upstream-targets
function fpkg-install() {
  echo "${YELLOW}==> ${RESET}Beginning installation process..."
  curl -fs $main/pkglist.txt -o $store/pkglist.tmp
  cat $store/pkglist.tmp | grep -w $request > $store/output.tmp
  if [ "$(cat $store/output.tmp)" = " " ]; then
    echo "${BRIGHTRED}fpkgr: package not found${RESET}"
  else
    echo "fpkgr: found main/$request"
    echo
    echo "-----------------------------"
    echo "Installing $request from main"
    echo "-----------------------------"
    echo
    read -p "Install? [Y/n] " install_yn
    if [ "$install_yn" = "n" ]; then
      echo "${BRIGHTRED}fpkgr: aborted.${RESET}"
    else
      echo "${BRIGHTGREEN}==> ${RESET}Running download process (curl)..."
      curl $main/"$request.tar" -o $store/.install/"$request.tar"
      echo "${YELLOW}==> ${RESET}Unpacking package..."
      cd $store/.install
      tar -xvf "$request.tar"
      echo "${BRIGHTGREEN}==> ${RESET}Unpacked."
      echo "${YELLOW}==> ${RESET}Installing..."
      source fpkgd
      if [ "$needs" = "system" ]; then
        echo "${YELLOW}fpkgr: package requesting system-wide installation"
        echo "fpkgr: sending request to user..."
        echo "${LIGHTBLUE}==> ${RESET}Package is set as system-wide installation."
        read -p "${PINK}==> ${RESET}Do you give permission? [y/N] " privilege_escalator
        if [ "$privilege_escalator" != "y" ]; then
          echo "${BRIGHTRED}fpkgr: stopping install and removing files."
          rm -f $store/pkglist.tmp $store/output.tmp
          exit
        else
          echo "${YELLOW}fpkgr: running with sudo...${RESET}"
          if [ ! -e /usr/local/bin/fpkgr ]; then
            echo "${YELLOW}fpkgr: requesting privilege escalation"
            sudo mkdir /usr/local/bin/fpkgr
            echo "export PATH=$PATH:/usr/local/bin/fpkgr" > ~/.pathmod
            echo "source ~/.pathmod" >> .*rc
          else
            echo "nothing" > /dev/null
          fi
          sudo cp $core /usr/local/bin/fpkgr/$core
          echo "${BRIGHTGREEN}fpkgr: user completed operation.${RESET}"
        fi
      else
        cp $core $HOME/.fpkgr/pkgs/$core
      fi
    fi
    echo "${YELLOW}==> ${RESET}Cleaning up..."
    rm -f $store/*.tmp
    rm -f $store/.install/*
    echo "${BRIGHTGREEN}fpkgr: done.${RESET}"
    exit
  fi
}

function fpkg-remove() {
  echo "${YELLOW}==> ${RESET}Removing target package..."
  rm -f $HOME/.fpkgr/pkgs/$request
  echo "${BLUE}==> ${RESET}To remove files from system, escalation is needed."
  sudo rm -f /usr/local/bin/fpkgr/$request
}

# install fpm
fpm_enabled=yes # switch - change to 'yes' to download fpm and check for updates after install. you can call this function after enabling by sourcing the file.
if [ "$fpm_enabled" = "yes" ] && [ ! -e $store/.fpmdllock ]; then
  curl -fs https://raw.githubusercontent.com/notronaldmcdonald/bash-scripts/master/foundation/fpkgr/release-info -o $store/releaseinfo.tmp
  cat $store/releaseinfo.tmp
  rm -f $store/releaseinfo.tmp
  echo "${YELLOW}fpkgr: installing fpm${RESET}"
  curl https://raw.githubusercontent.com/notronaldmcdonald/fpm/core/fpm -o $store/fpm.tmp
  echo "${BRIGHTGREEN}fpkgr: downloaded fpm."
  echo "${LIGHTBLUE}fpkgr: privilege escalation required to install.${RESET}"
  sudo mv $store/fpm.tmp /usr/local/bin/fpm
  sudo chmod +x /usr/local/bin/fpm
  echo "${BRIGHTGREEN}fpkgr: fpm installed successfully.${RESET}"
  rm -f $store/fpm.tmp
  touch $store/.fpmdllock
  sleep 1
  exit
else
  echo "${BRIGHTRED}fpkgr: exit.${RESET}"
fi
echo "${RESET}fpkgr finished task: handoff"
